name: release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write
  pages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Release please
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        id: release

  inspector-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: release-please
    if: ${{ needs.release-please.outputs.release-created }}
    steps:
      - uses: actions/checkout@v4
      - uses: shiron-dev/actions/setup-node@3478cc44402c5c590ce6732554e621558ac6d6e5 # v1.5.0
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run build
        run: pnpm run build:inspector
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./.eslint-config-inspector --project-name=eslint-config

  npm-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.release-created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shiron-dev/actions/setup-node@3478cc44402c5c590ce6732554e621558ac6d6e5 # v1.5.0
      - name: Install package
        run: pnpm install --frozen-lockfile
      - name: Build package
        run: pnpm run build
      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish to npm
        run: |
          pnpm publish --provenance --access public
